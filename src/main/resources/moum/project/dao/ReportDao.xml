<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moum.project.dao.ReportDao">

  <resultMap id="ReportMap" type="moum.project.vo.Report">
    <id column="report_id" property="no"/>
    <result column="report_content" property="reportContent"/>
    <result column="report_date" property="reportDate"/>
    <result column="result_content" property="resultContent"/>

    <!-- 신고자 -->
    <association property="user" javaType="moum.project.vo.User">
      <id column="user_id" property="no"/>
      <result column="nickname" property="nickname"/>
    </association>

    <!-- 신고항목 -->
    <association property="reportCategory" javaType="moum.project.vo.ReportCategory">
      <id column="report_category_id" property="no"/>
      <result column="category_name" property="name"/>
    </association>

    <!-- 신고처리유형 -->
    <association property="resultCategory" javaType="moum.project.vo.ReportResultCategory">
      <id column="report_result_id" property="no"/>
      <result column="result_name" property="name"/>
    </association>

  </resultMap>

  <resultMap id="ReportCategoryMap" type="moum.project.vo.ReportCategory">
    <id column="report_category_id" property="no"/>
    <result column="category_name" property="name"/>
  </resultMap>

  <resultMap id="ResultCategoryMap" type="moum.project.vo.ReportResultCategory">
    <id column="report_result_id" property="no"/>
    <result column="result_name" property="name"/>
  </resultMap>

  <insert id="insert" parameterType="moum.project.vo.Report"
          useGeneratedKeys="true" keyColumn="report_id" keyProperty="no">
    insert into report(user_id, report_category_id, report_content)
    values(#{user.no}, #{reportCategory.no}, #{reportContent})
  </insert>

  <!-- 신고 리스트 -->
<!--  <select id="list" resultType="moum.project.vo.Report">-->
<!--    SELECT-->
<!--    report_id,-->
<!--    user_id,-->
<!--    report_category_id,-->
<!--    report_content,-->
<!--    report_date,-->
<!--    report_result_id,-->
<!--    result_content-->
<!--    FROM report-->
<!--  </select>-->

  <select id="findBy" resultMap="ReportMap" parameterType="int">
    SELECT
      r.report_id,
      r.user_id,
      u.nickname,
      r.report_category_id,
      rc.category_name,
      r.report_content,
      r.report_date,
      r.report_result_id,
      rrc.result_name,
      r.result_content
    FROM report r
      left join user u on r.user_id = u.user_id
      left join report_category rc on r.report_category_id = rc.report_category_id
      left join report_result_category rrc on r.report_result_id = rrc.report_result_id
    WHERE
      r.report_id = #{no}
  </select>

  <!-- 신고 리스트 + 조인 -->
  <select id="list" resultMap="ReportMap">
    SELECT
      r.report_id,
      r.user_id,
      u.nickname,
      r.report_category_id,
      rc.category_name,
      r.report_content,
      r.report_date,
      r.report_result_id,
      rrc.result_name,
      r.result_content
    FROM report r
      left join user u on r.user_id = u.user_id
      left join report_category rc on r.report_category_id = rc.report_category_id
      left join report_result_category rrc on r.report_result_id = rrc.report_result_id
  </select>

  <select id="listByPage" resultMap="ReportMap" parameterType="map">
    SELECT
      r.report_id,
      r.user_id,
      u.nickname,
      r.report_category_id,
      rc.category_name,
      r.report_content,
      r.report_date,
      r.report_result_id,
      rrc.result_name,
      r.result_content
    FROM report r
      left join user u on r.user_id = u.user_id
      left join report_category rc on r.report_category_id = rc.report_category_id
      left join report_result_category rrc on r.report_result_id = rrc.report_result_id
    WHERE
      1 = 1
      <if test="report.reportDateString != null">
        AND r.report_date LIKE CONCAT(#{report.reportDateString}, '%')
      </if>
      <if test="report.user != null and report.user.nickname != null">
        AND u.nickname LIKE CONCAT('%', #{report.user.nickname}, '%')
      </if>
      <if test="report.reportCategory != null and report.reportCategory.name != null">
        AND rc.category_name LIKE CONCAT('%', #{report.reportCategory.name}, '%')
      </if>
      <if test="report.resultCategory != null and report.resultCategory.name != null">
        AND rrc.result_name LIKE CONCAT('%', #{report.resultCategory.name}, '%')
      </if>
    ORDER BY
      r.report_date desc
    LIMIT #{pageNo}, #{pageCount}
  </select>

  <select id="count" parameterType="moum.project.vo.Report">
    SELECT count(*)
    FROM report r
      left join user u on r.user_id = u.user_id
      left join report_category rc on r.report_category_id = rc.report_category_id
      left join report_result_category rrc on r.report_result_id = rrc.report_result_id
    WHERE
      1 = 1
      <if test="reportDateString != null">
        AND r.report_date LIKE CONCAT(#{reportDateString}, '%')
      </if>
      <if test="user != null and user.nickname != null">
        AND u.nickname LIKE CONCAT('%', #{user.nickname}, '%')
      </if>
      <if test="reportCategory != null and reportCategory.name != null">
        AND rc.category_name LIKE CONCAT('%', #{reportCategory.name}, '%')
      </if>
      <if test="resultCategory != null and resultCategory.name != null">
        AND rrc.result_name LIKE CONCAT('%', #{resultCategory.name}, '%')
      </if>
  </select>

  <select id="listReportCategories" resultMap="ReportCategoryMap">
    select
      report_category_id,
      category_name
    from
      report_category
    order by
      category_name
  </select>

  <select id="listResultCategories" resultMap="ResultCategoryMap">
    select
      report_result_id,
      result_name
    from
      report_result_category
    order by
      result_name
  </select>

  <update id="updateResult" parameterType="moum.project.vo.Report">
    update report set
      report_result_id = #{resultCategory.no},
      result_content = #{resultContent}
    where
      report_id = #{no}
  </update>

  <delete id="delete" parameterType="int">

  </delete>

</mapper>


