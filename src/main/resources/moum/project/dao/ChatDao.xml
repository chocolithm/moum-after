<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moum.project.dao.ChatDao">

  <resultMap id="ChatMap" type="moum.project.vo.Chat">
    <id column="chat_id" property="no"/>
    <result column="message" property="message"/>
    <result column="chat_date" property="chatDate"/>
    <result column="chat_read" property="read"/>
    
    <association property="chatroom" javaType="moum.project.vo.Chatroom">
      <id column="chatroom_id" property="no"/>
      <association property="participant" javaType="moum.project.vo.User">
        <id column="participant_id" property="no"/>
      </association>
    </association>

    <association property="sender" javaType="moum.project.vo.User">
      <id column="sender_id" property="no"/>
      <result column="nickname" property="nickname"/>
      <result column="photo" property="photo"/>
    </association>
  </resultMap>

  <resultMap id="ChatroomMap" type="moum.project.vo.Chatroom">
    <id column="chatroom_id" property="no"/>
    <result column="message" property="lastMessage"/>
    <result column="chat_date" property="chatDate"/>
    <result column="chat_read" property="read"/>
    <result column="sender_id" property="senderNo"/>
    <result column="count" property="count"/>

    <association property="owner" javaType="moum.project.vo.User">
      <id column="owner_id" property="no"/>
      <result column="owner_nickname" property="nickname"/>
      <result column="owner_photo" property="photo"/>
      <result column="owner_end_date" property="endDate"/>
    </association>

    <association property="participant" javaType="moum.project.vo.User">
      <id column="participant_id" property="no"/>
      <result column="participant_nickname" property="nickname"/>
      <result column="participant_photo" property="photo"/>
      <result column="participant_end_date" property="endDate"/>
    </association>

    <association property="board" javaType="moum.project.vo.Board">
      <id column="board_id" property="no"/>
      <result column="board_user_id" property="userNo"/>
      <result column="title" property="title"/>
      <result column="post_date" property="postDate"/>
      <result column="price" property="price"/>
      <result column="status" property="status"/>
      <result column="is_deleted" property="isDeleted"/>

      <association property="collection" javaType="moum.project.vo.Collection">
        <id column="collection_id" property="no"/>
        <result column="name" property="name"/>
      </association>

      <collection property="attachedFiles" ofType="moum.project.vo.AttachedFile">
          <id column="photo_id" property="no"/>
          <result column="filename" property="filename"/>
      </collection>
    </association>

  </resultMap>

  <insert id="insertChat" parameterType="moum.project.vo.Chat"
          useGeneratedKeys="true" keyColumn="chat_id" keyProperty="no">
    insert into chat(chatroom_id, user_id, message, chat_read)
    values(#{chatroom.no}, #{sender.no}, #{message}, #{read})
  </insert>

  <insert id="insertRoom" parameterType="moum.project.vo.Chatroom"
          useGeneratedKeys="true" keyColumn="chatroom_id" keyProperty="no">
    insert into chatroom(board_id, user_id)
    values(#{board.no}, #{participant.no})
  </insert>

  <select id="listChat" resultMap="ChatMap" parameterType="map">
    select
      c.chat_id,
      c.user_id as sender_id,
      cr.user_id as participant_id,
      u.nickname,
      u.photo,
      c.message,
      c.chat_date
    from
      chat c
      left join chatroom cr on c.chatroom_id = cr.chatroom_id
      left join user u on c.user_id = u.user_id
    where
      c.chatroom_id = #{roomNo}
    order by
      c.chat_date desc
    limit #{pageNo}, #{pageCount}
  </select>

  <select id="listRoom" resultMap="ChatroomMap" parameterType="map">
    select
      cr.chatroom_id,
      cr.user_id as participant_id,
      up.nickname as participant_nickname,
      up.photo as participant_photo,
      up.end_date as participant_end_date,
      b.board_id,
      b.title,
      b.user_id as owner_id,
      bp.photo_id,
      bp.filename,
      uo.nickname as owner_nickname,
      uo.photo as owner_photo,
      uo.end_date as owner_end_date,
      c1.message,
      c1.user_id as sender_id,
      c1.chat_date,
      c1.chat_read,
      unread_counts.unread_count as count
    from
      chatroom cr
      left join user up on cr.user_id = up.user_id
      left join board b on cr.board_id = b.board_id
      left join board_photo bp on b.board_id = bp.board_id
      left join user uo on b.user_id = uo.user_id
      inner join (
        select chatroom_id, user_id, message, chat_date, chat_read
        from chat c
        where
          chat_date = (
            select max(chat_date)
            from chat
            where chatroom_id = c.chatroom_id
          )
      ) c1 on cr.chatroom_id = c1.chatroom_id
      left join (
        select chatroom_id, count(*) as unread_count
        from chat
        where chat_read = 0
        group by chatroom_id
      ) unread_counts on cr.chatroom_id = unread_counts.chatroom_id
    where
      b.user_id = #{no}
      or cr.user_id = #{no}
    order by
      c1.chat_date desc;
  </select>

  <select id="findChat" resultMap="ChatMap" parameterType="int">

  </select>

  <select id="findRoom" resultMap="ChatroomMap" parameterType="int">
    select
      cr.chatroom_id,
      cr.user_id as participant_id,
      u1.end_date as participant_end_date,
      b.board_id,
      b.user_id as owner_id,
      u2.end_date as owner_end_date,
      b.title,
      b.post_date,
      b.is_deleted,
      tb.collection_id,
      cl.name,
      tb.price
    from
      chatroom cr
      left join board b on cr.board_id = b.board_id
      left join trade_board tb on cr.board_id = tb.board_id
      left join collection cl on tb.collection_id = cl.collection_id
      left join user u1 on cr.user_id = u1.user_id
      left join user u2 on b.user_id = u2.user_id
    where
      cr.chatroom_id = #{no}
  </select>

  <select id="findRoomByBoard" resultMap="ChatroomMap" parameterType="int">
    select
      cr.chatroom_id,
      u2.user_id as participant_id,
      u2.end_date as participant_end_date
    from
      chatroom cr
      left join board b on cr.board_id = b.board_id
      left join user u1 on b.user_id = u1.user_id
      left join user u2 on cr.user_id = u2.user_id
    where
      cr.board_id = #{boardNo}
      and cr.user_id = #{userNo}
  </select>

  <update id="updateRead" parameterType="map">
    update chat
    set chat_read = 1
    where
      chatroom_id = #{chatroomNo}
      and user_id != #{userNo}
  </update>

  <delete id="delete" parameterType="int">

  </delete>

</mapper>
