<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moum.project.dao.CollectionDao">

  <resultMap id="CollectionMap" type="moum.project.vo.Collection">
    <id column="collection_id" property="no"/>
    <result column="name" property="name"/>
    <result column="purchase_date" property="purchaseDate"/>
    <result column="purchase_place" property="purchasePlace"/>
    <result column="price" property="price"/>
    <result column="storage_location" property="storageLocation"/>
    <result column="post_date" property="postDate"/>
    <result column="other_category" property="otherCategory"/>
    <result column="is_deleted" property="isDeleted"/>
    <result column="memo" property="memo"/>

    <association property="user" javaType="moum.project.vo.User">
      <id column="user_id" property="no"/>
      <result column="nickname" property="nickname"/>
    </association>

    <association property="maincategory" javaType="moum.project.vo.Maincategory">
      <id column="maincategory_id" property="no"/>
      <result column="maincategory_name" property="name"/>
      <result column="color" property="color"/>
    </association>

    <association property="subcategory" javaType="moum.project.vo.Subcategory">
      <id column="subcategory_id" property="no"/>
      <result column="subcategory_name" property="name"/>
    </association>

    <association property="status" javaType="moum.project.vo.CollectionStatus">
      <id column="status_id" property="no"/>
      <result column="status_name" property="name"/>
    </association>

    <collection property="attachedFiles" ofType="moum.project.vo.AttachedFile">
      <id column="photo_id" property="no"/>
      <result column="filename" property="filename"/>
      <result column="origin_filename" property="originFilename"/>
      <result column="is_primary" property="isPrimary"/>
    </collection>
  </resultMap>

  <resultMap id="AttachedFileMap" type="moum.project.vo.AttachedFile">
    <id column="photo_id" property="no"/>
    <result column="filename" property="filename"/>
    <result column="origin_filename" property="originFilename"/>
    <result column="is_primary" property="isPrimary"/>
  </resultMap>

  <insert id="insert" parameterType="moum.project.vo.Collection"
          useGeneratedKeys="true" keyColumn="collection_id" keyProperty="no">
    insert into collection(user_id, subcategory_id, name, status_id, other_category,
      purchase_date, purchase_place, price, storage_location, memo)
    values(#{user.no}, #{subcategory.no}, #{name}, #{status.no}, #{otherCategory},
      #{purchaseDate}, #{purchasePlace}, #{price}, #{storageLocation}, #{memo})
  </insert>

  <select id="list" resultMap="CollectionMap" parameterType="int">
    select
      c.collection_id,
      c.name,
      sc.maincategory_id,
      mc.color,
      c.subcategory_id,
      c.other_category,
      c.status_id,
      c.memo,
      cs.status_name,
      cp.photo_id,
      cp.filename,
      cp.origin_filename
    from
      collection c
      left join collection_status cs on c.status_id = cs.status_id
      left join collection_photo cp on c.collection_id = cp.collection_id
      left join subcategory sc on c.subcategory_id = sc.subcategory_id
      left join maincategory mc on sc.maincategory_id = mc.maincategory_id
    where
      c.is_deleted = 0
      and c.user_id = #{no}
  </select>

  <select id="findBy" resultMap="CollectionMap" parameterType="int">
    select
      c.collection_id,
      c.user_id,
      c.name,
      c.price,
      sc.maincategory_id,
      c.subcategory_id,
      c.other_category,
      c.purchase_date,
      c.purchase_place,
      c.storage_location,
      c.status_id,
      c.memo,
      cs.status_name,
      cp.photo_id,
      cp.filename,
      cp.origin_filename
    from
      collection c
      left join collection_status cs on c.status_id = cs.status_id
      left join subcategory sc on c.subcategory_id = sc.subcategory_id
      left outer join collection_photo cp on c.collection_id = cp.collection_id
    where
      c.is_deleted = 0
      and c.collection_id = #{no}
    order by cp.photo_id
  </select>

  <select id="findByFileNo" resultMap="CollectionMap" parameterType="int">
    select
      c.collection_id,
      c.user_id,
      c.name,
      c.price,
      sc.maincategory_id,
      c.subcategory_id,
      c.other_category,
      c.purchase_date,
      c.purchase_place,
      c.storage_location,
      c.status_id,
      cs.status_name,
      c.memo
    from
      collection c
      left join collection_status cs on c.status_id = cs.status_id
      left join subcategory sc on c.subcategory_id = sc.subcategory_id
    where
      c.collection_id = (select collection_id from collection_photo where photo_id = #{no})
  </select>

  <update id="update" parameterType="moum.project.vo.Collection">
    update
      collection
    set
      name = #{name},
      subcategory_id = #{subcategory.no},
      other_category = #{otherCategory},
      status_id = #{status.no},
      purchase_date = #{purchaseDate},
      purchase_place = #{purchasePlace},
      price = #{price},
      storage_location = #{storageLocation},
      memo = #{memo}
    where
      collection_id = #{no}
  </update>

  <delete id="delete" parameterType="int">
    update collection
    set is_deleted = 1
    where collection_id = #{no}
  </delete>

  <insert id="insertFiles" parameterType="moum.project.vo.Collection">
    insert into collection_photo(collection_id, filename, origin_filename)
    values
    <foreach collection="attachedFiles" item="attachedFile" separator=",">
      (#{no}, #{attachedFile.filename}, #{attachedFile.originFilename})
    </foreach>
  </insert>

  <select id="getFile" parameterType="int">
    select
      filename,
      origin_filename
    from
      collection_photo
    where
      photo_id = #{no}
  </select>

  <delete id="deleteFile" parameterType="int">
    delete from collection_photo
    where photo_id = #{no}
  </delete>

  <delete id="deleteFiles" parameterType="int">
    delete from collection_photo
    where collection_id = #{no}
  </delete>

  <delete id="deleteFilesExceptOne" parameterType="map">
    delete from collection_photo
    where collection_id = #{collectionNo}
    and photo_id != #{photoNo}
  </delete>

    <!-- 특정 컬렉션 조회 쿼리 -->
    <select id="selectById" parameterType="int" resultType="moum.project.vo.Collection">
      SELECT * FROM collections WHERE no = #{collectionNo}
    </select>



</mapper>
